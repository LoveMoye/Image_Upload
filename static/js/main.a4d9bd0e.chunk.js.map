{"version":3,"sources":["dragNDrop.svg","App.js","index.js"],"names":["App","props","state","title","renderImage","uploadImage","imgFile","imgURL","onDragEnter","bind","onDragOver","drop","event","stopPropagation","preventDefault","file","dataTransfer","files","window","URL","createObjectURL","this","setState","name","split","console","log","formData","FormData","append","getAll","axios","url","method","data","headers","timeout","className","action","encType","onDrop","src","alt","onLoad","revokeObjectURL","style","maxWidth","maxHeight","dragNDrop","type","id","cursor","htmlFor","onClick","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAAe,MAA0B,sC,iBC2H1BA,G,wDArHb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,MAAO,oBACPC,aAAa,EACbC,aAAa,EACbC,QAAS,KACTC,OAAQ,MAEV,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBAClB,EAAKE,KAAO,EAAKA,KAAKF,KAAV,gBACZ,EAAKJ,YAAc,EAAKA,YAAYI,KAAjB,gBAZF,E,wDAePG,GACVA,EAAMC,kBACND,EAAME,mB,iCAGGF,GACTA,EAAMC,kBACND,EAAME,mB,2BAGHF,GACHA,EAAMC,kBACND,EAAME,iBACN,IACMC,EADKH,EAAMI,aACDC,MAAM,GAChBV,EAASW,OAAOC,IAAIC,gBAAgBL,GAC1CM,KAAKC,SACH,CACEhB,QAASS,EACTR,OAAOA,EACPJ,MAAOY,EAAKQ,KAAKC,MAAM,KAAK,GAC5BpB,aAAa,EACbC,aAAa,IAGjBoB,QAAQC,IAAIX,K,oCAIZ,IAAIY,EAAW,IAAIC,SACnBD,EAASE,OAAO,QAASR,KAAKnB,MAAMI,SACpCmB,QAAQC,IAAIC,EAASG,OAAO,SAAS,IACrCT,KAAKC,SACH,CACEjB,aAAY,IAEbgB,KAAKnB,MAAME,aACZ2B,IAAM,CACJC,IAAK,4BACLC,OAAQ,OACRC,KAAMP,EACNQ,QAAS,CAAE,eAAgB,uBAC3BC,QAAS,Q,+BAKL,IAAD,OACP,OACE,sBAAKC,UAAU,YAAf,UACE,6BAAKhB,KAAKnB,MAAMC,QACd,uBAAMkC,UAAU,SACZJ,OAAO,OACPK,OAAO,yBACPC,QAAQ,sBAHZ,UAKA,qBAAKF,UAAU,SAAS7B,YAAaa,KAAKb,YACtCE,WAAYW,KAAKX,WAAY8B,OAAQnB,KAAKV,KAD9C,SAGGU,KAAKnB,MAAME,YACZ,qBAAKiC,UAAU,aAAf,SACE,qBAAKI,IAAKpB,KAAKnB,MAAMK,OACrBmC,IAAKrB,KAAKnB,MAAMC,MAChBwC,OAAQ,WACNzB,OAAOC,IAAIyB,gBAAgB,EAAK1C,MAAM8B,MAExCa,MACE,CACEC,SAAU,QACVC,UAAW,aAKf,sBAAKV,UAAU,SAAf,UACA,qBAAKI,IAAKO,EAAWN,IAAI,cACzB,sBAAKL,UAAU,UAAf,UACE,uBAAOY,KAAK,OAAOC,GAAG,SACtB,uBAAOL,MAAO,CAACM,OAAO,WAAYC,QAAQ,OAA1C,SAAiD,0DACjD,4DAML/B,KAAKnB,MAAMG,YACV,qBAAKgC,UAAU,gBAAf,gCAGAhB,KAAKnB,MAAME,YACT,oBAAIiC,UAAU,aAAd,SACE,oBAAIA,UAAU,gBAAd,SAA+BhB,KAAKnB,MAAMI,QAAQiB,SAEpD,QAGN,wBAAQc,UAAU,aAAagB,QAAShC,KAAKhB,YAA7C,2B,GAhHUiD,cCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a4d9bd0e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/dragNDrop.d880ef91.svg\";","import React, { Component } from 'react';\nimport dragNDrop from './dragNDrop.svg'\nimport axios from 'axios';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"There is No Image\",\n      renderImage: false,\n      uploadImage: false,\n      imgFile: null,\n      imgURL: null\n    }\n    this.onDragEnter = this.onDragEnter.bind(this);\n    this.onDragOver = this.onDragOver.bind(this);\n    this.drop = this.drop.bind(this);\n    this.uploadImage = this.uploadImage.bind(this);\n  }\n\n  onDragEnter(event) {\n    event.stopPropagation();\n    event.preventDefault();\n  }\n\n  onDragOver(event) {\n    event.stopPropagation();\n    event.preventDefault();\n  }\n\n  drop(event) {\n    event.stopPropagation();\n    event.preventDefault();\n    const dt = event.dataTransfer;\n    const file = dt.files[0];\n    const imgURL = window.URL.createObjectURL(file);\n    this.setState(\n      {\n        imgFile: file,\n        imgURL:imgURL,\n        title: file.name.split('.')[0],\n        renderImage: true,\n        uploadImage: false\n      })\n\n    console.log(file);\n  }\n\n  uploadImage() {\n    let formData = new FormData();\n    formData.append(\"image\", this.state.imgFile);\n    console.log(formData.getAll('image')[0]);\n    this.setState(\n      { \n        uploadImage:true\n      });\n    if(this.state.renderImage){\n      axios({\n        url: \"http://localhost:3001/api\",\n        method: 'post',\n        data: formData,\n        headers: { 'Content-Type': 'multipart/form-data' },\n        timeout: 5000\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>{this.state.title}</h1>\n          <form className=\"form_0\" \n              method=\"post\" \n              action=\"http://localhost:3001/\" \n              encType=\"multipart/form-data\"\n              >\n          <div className=\"form_1\" onDragEnter={this.onDragEnter} \n              onDragOver={this.onDragOver} onDrop={this.drop}>\n\n            {this.state.renderImage ?\n            <div className=\"form_image\">\n              <img src={this.state.imgURL} \n              alt={this.state.title}\n              onLoad={()=>{\n                window.URL.revokeObjectURL(this.state.url)\n              }} \n              style={\n                {\n                  maxWidth: \"490px\",\n                  maxHeight: \"520px\"\n                }\n              }></img>\n            </div> :\n\n              <div className=\"form_2\">\n              <img src={dragNDrop} alt=\"dranNdrop\"></img>\n              <div className=\"message\">\n                <input type=\"file\" id=\"file\"></input>\n                <label style={{cursor:\"pointer\"}} htmlFor=\"file\"><strong>Choose your image </strong></label>\n                <span>or Drag and Drop</span>\n              </div>\n            </div>\n            }\n\n          </div>\n          {this.state.uploadImage ? \n            <div className=\"uploadMessage\">\n              Success Uploading!\n            </div> :\n            this.state.renderImage ? \n              <ul className=\"uploadList\">\n                <li className=\"uploadElement\">{this.state.imgFile.name}</li>\n              </ul> :\n              null\n          }\n        </form>\n        <button className=\"upload_btn\" onClick={this.uploadImage}>Upload</button>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}